# Note: 192.168.123.xxx is an example network, you must update all these to match your own.

version: '2.1'

services:
  pihole:
    container_name: pihole
    image: pihole/pihole:v5.1.2
    hostname: pihole
    domainname: home.indiegigs.com             # <-- Update
    cap_add:
      - NET_ADMIN
    networks:
      docker_network:
        ipv4_address: 192.168.1.3   #Â <-- Update
#        ipv6_address: 2a02:8010:6253:0:0:0:1:2
    dns:
      - 127.0.0.1
      - 8.8.8.8
    ports:
      - 443/tcp
      - 53/tcp
      - 53/udp
      - 67/udp
      - 80/tcp
    environment:
      ServerIP: 192.168.1.3         # <-- Update (match ipv4_address)
 #     ServerIPv6: 2a02:8010:6253:0:0:0:1:2
      VIRTUAL_HOST: pihole.home.indiegigs.com  # <-- Update (match hostname + domainname)
      WEBPASSWORD: ""                   # <-- Add password (if required)
    volumes:
      - ../pihole/resolv.conf:/etc/resolv.conf
      - ../pihole/data:/etc/pihole
    restart: unless-stopped
  unifi:
     container_name: unifi-controller
     image: jacobalberty/unifi:5.12.35
     hostname: unifi
     domainname: home.indiegigs.com             # <-- Update
     cap_add:
       - NET_ADMIN
     networks:
      docker_network:
        ipv4_address: 192.168.1.4   #M-BM- <-- Update
     dns:
      - 127.0.0.1
      - 8.8.8.8
     ports:
      - 443/tcp
      - 80/tcp
  grafana:
    image: grafana/grafana:7.1.3
    container_name: grafana
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini
      - ./teslamate/grafana/dashboards:/teslamate
    environment:
      - GF_PATHS_PROVISIONING=/var/lib/grafana/provisioning
    ports:
      - 3000:3000
  prometheus:
    image: prom/prometheus:v2.21.0
    container_name: prometheus
    restart: always
    links:
      - node-exporter
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/rules.yml:/etc/prometheus/rules.yml
      - ./prometheus/data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=900d"
  alertmanager:
    image: prom/alertmanager:v0.21.0
    container_name: alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./secrets/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
  node-exporter:
    privileged: true
    image: prom/node-exporter:v1.0.1
    container_name: node-exporter
    restart: always
    network_mode: host
    ports:
      - 9100:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /volume1:/volume1:ro
    command:
      - "--log.level=debug"
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.ignored-mount-points"
      - "^/(rootfs/)?(dev|etc|host|proc|run|sys|volume1/@docker)($$|/)"
  zyxel:
    image: andrewjw/zyxelprometheus:0.5.2
    container_name: zyxel
    ports:
      - 9101:9100
    env_file:
      - ./secrets/zyxel
  mythtv:
     image: instantlinux/mythtv-backend:29.1-fixes.201909121531.4c432df
     container_name: mythtv
     restart: always
     networks:
      docker_network:
        ipv4_address: 192.168.1.2
     cap_add:
        - NET_ADMIN
     volumes:
        - /volume1/mythtv:/mnt/nfs/mythtv2
        - ./secrets/mythtv-db-password:/run/secrets/mythtv-db-password:ro
     environment:
        - DBNAME=mythconverg
        - DBSERVER=192.168.1.5
     ports:
        - 80/tcp
        - 6544/tcp
        - 6760/tcp
  teslamate:
    image: teslamate/teslamate:1.19.4
    container_name: teslamate
    restart: always
    environment:
      - DATABASE_HOST=database
      - MQTT_HOST=mqtt
    env_file:
      - ./secrets/teslamate
    volumes:
      - ./import:/opt/app/import
    cap_drop:
      - all
    ports:
      - 4000:4000
  database:
    image: postgres:12
    container_name: postgres
    restart: always
    env_file:
      - ./secrets/postgres
    volumes:
      - ./teslamate-db:/var/lib/postgresql/data
    ports:
      - 5433:5432
  code:
    image: codercom/code-server:3.5.0
    container_name: code
    restart: always
    volumes:
      - /var/services/homes/andrew/programming:/home/coder/project
      - /var/services/homes/andrew/docker/secrets/code-server.yaml:/home/coder/.config/code-server/config.yaml
      - /var/services/homes/andrew/.ssh:/home/coder/.ssh
    ports:
      - 9000:8080
    user: "1026:100"
  jekyll:
    image: jekyll/jekyll:3.8
    container_name: jekyll
    restart: always
    command: jekyll serve --drafts --future --trace
    volumes:
      - /var/services/homes/andrew/programming/site:/srv/jekyll
    ports:
      - 9001:4000
    environment:
      - MAKEFLAGS=-j4

networks:
  docker_network:
    enable_ipv6: false
    driver: macvlan
    driver_opts:
      parent: eth1
    ipam:
      config:
        - subnet: 192.168.1.0/24            # <-- Update
          gateway: 192.168.1.1              # <-- Update
          ip_range: 192.168.1.3/28        # <-- Update
       # - subnet: 2a02:8010:6253:0:0:0:1:1/48
